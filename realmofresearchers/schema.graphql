type ApprovalForAll @entity(immutable: true) {
  id: Bytes!
  account: Bytes! # address
  operator: Bytes! # address
  approved: Boolean! # bool
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type CratorRigistered @entity(immutable: true) {
  id: Bytes!
  Contract_id: BigInt! # uint256
  creator: Bytes! # address
  URI: String! # string
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type PaperMinted @entity(immutable: true) {
  id: Bytes!
  Contract_id: BigInt! # uint256
  owner: Bytes! # address
  URI: String! # string
  tokenId: BigInt! # uint256
  subscriptionFee: BigInt! # uint256
  avgSuccessOnPublishing: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type SocialTokenBought @entity(immutable: true) {
  id: Bytes!
  Contract_id: BigInt! # uint256
  researcher: Bytes! # address
  supporter: Bytes! # address
  amount: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type SocialTokenLaunched @entity(immutable: true) {
  id: Bytes!
  Contract_id: BigInt! # uint256
  owner: Bytes! # address
  price: BigInt! # uint256
  threshold: BigInt! # uint256
  ownershipOnEntireTokenBatch: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type SocialTokenMinted @entity(immutable: true) {
  id: Bytes!
  Contract_id: BigInt! # uint256
  owner: Bytes! # address
  amount: BigInt! # uint256
  URI: String! # string
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type TransferBatch @entity(immutable: true) {
  id: Bytes!
  operator: Bytes! # address
  from: Bytes! # address
  to: Bytes! # address
  ids: [BigInt!]! # uint256[]
  values: [BigInt!]! # uint256[]
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type TransferSingle @entity(immutable: true) {
  id: Bytes!
  operator: Bytes! # address
  from: Bytes! # address
  to: Bytes! # address
  Contract_id: BigInt! # uint256
  value: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type URI @entity(immutable: true) {
  id: Bytes!
  value: String! # string
  Contract_id: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type rewardClaimed @entity(immutable: true) {
  id: Bytes!
  supporter: Bytes! # address
  paperId: BigInt! # uint256
  amount: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type subscribed @entity(immutable: true) {
  id: Bytes!
  subscriber: Bytes! # address
  paperId: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}
