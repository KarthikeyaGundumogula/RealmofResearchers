specVersion: 0.0.5
schema:
  file: ./schema.graphql
dataSources:
  - kind: ethereum
    name: Contract
    network: mumbai
    source:
      address: "0x66FBde39f4325C57dDBA2f9f85194FbA453fFC7E"
      abi: Contract
      startBlock: 43321335
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      entities:
        - ApprovalForAll
        - CratorRigistered
        - PaperMinted
        - SocialTokenBought
        - SocialTokenLaunched
        - SocialTokenMinted
        - TransferBatch
        - TransferSingle
        - URI
        - rewardClaimed
        - subscribed
      abis:
        - name: Contract
          file: ./abis/Contract.json
      eventHandlers:
        - event: ApprovalForAll(indexed address,indexed address,bool)
          handler: handleApprovalForAll
        - event: CratorRigistered(uint256,address,string)
          handler: handleCratorRigistered
        - event: PaperMinted(uint256,address,string,uint256,uint256,uint256)
          handler: handlePaperMinted
        - event: SocialTokenBought(uint256,address,address,uint256)
          handler: handleSocialTokenBought
        - event: SocialTokenLaunched(uint256,address,uint256,uint256,uint256)
          handler: handleSocialTokenLaunched
        - event: SocialTokenMinted(uint256,address,uint256,string)
          handler: handleSocialTokenMinted
        - event: TransferBatch(indexed address,indexed address,indexed address,uint256[],uint256[])
          handler: handleTransferBatch
        - event: TransferSingle(indexed address,indexed address,indexed address,uint256,uint256)
          handler: handleTransferSingle
        - event: URI(string,indexed uint256)
          handler: handleURI
        - event: rewardClaimed(address,uint256,uint256)
          handler: handlerewardClaimed
        - event: subscribed(address,uint256)
          handler: handlesubscribed
      file: ./src/contract.ts
